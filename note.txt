import cv2
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score

# Load the dataset and extract faces (similar to previous code)
def load_faces(dataset_dir):
    # Load and preprocess images, detect faces, etc.
    ...

# Preprocess faces, split the dataset, encode labels, etc.
faces, labels = load_faces(dataset_dir)
...

# Create and train the face recognizer
face_recognizer = cv2.face.LBPHFaceRecognizer_create()
face_recognizer.train(faces, labels)

# Evaluate the model (for demonstration purposes)
predictions = []
for face in X_test:
    label, _ = face_recognizer.predict(face)
    predictions.append(label)

# Calculate accuracy
accuracy = accuracy_score(y_test, predictions)
print("Accuracy:", accuracy)
